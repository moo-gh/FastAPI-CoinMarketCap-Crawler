services:
  fastapi_crawler_redis:
    image: redis:6-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  fastapi_crawler_db:
    image: postgres:14-alpine
    container_name: fastapi_crawler_db
    volumes:
      - ./fastapi_crawler_db/:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  fastapi-crawler_app:
    container_name: fastapi-crawler_app
    build: .
    ports:
      - 8046:8046
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHANNEL=${TELEGRAM_CHANNEL}
      - CMC_API_KEY=${CMC_API_KEY}
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - fastapi_crawler_redis
      - fastapi_crawler_db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8046/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  fastapi-crawler_scheduler:
    container_name: fastapi-crawler_scheduler
    build: .
    command: python scheduler.py
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHANNEL=${TELEGRAM_CHANNEL}
      - UPDATE_INTERVAL_MINUTES=${UPDATE_INTERVAL_MINUTES:-5}
      - API_URL=http://fastapi-crawler_app:8046
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - fastapi-crawler_app
    restart: unless-stopped
